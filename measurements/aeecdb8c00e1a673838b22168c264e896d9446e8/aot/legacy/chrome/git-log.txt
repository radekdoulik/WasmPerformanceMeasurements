commit aeecdb8c00e1a673838b22168c264e896d9446e8
Author: Ruihan-Yin <107431934+Ruihan-Yin@users.noreply.github.com>
Date:   Thu Feb 15 14:40:28 2024 -0800

    Expose AVX512F embedded rounding intrinsics. (#97415)
    
    * Expose embedded rounding related scalar intrinsic APIs
    
    * Expose embedded rounding related arithmatic intrinsic APIs
    
    * Ensure the new APIs are properly lowered
    
    * Bug fixes
    
    * Expose embedded rounding casting APIs
    
    * Expose arithmetic embedded rounding unit tests
    
    * Add a test template for embedded rounding APIs, this will be enough to cover all the binary APIs including vector and scalar operations.
    
    * Add template for unary ops
    
    * Expose all  the embedded rounding unit tests generated by the templates
    
    * Expose embedded rounding casting APIs unit tests
    
    * Expose handwritten unit tests for embedded rounding APIs with special input arg lists.
    
    * Bug fixes:
    1. ConvertToVector256Int32/UInt32 use special code gen path, adding a fallback path when embedded rounding is activated and the control byte is not constant.
    
    * Bug fix:
    Fix wrong data type in the API definition.
    
    * formatting
    
    * Update API documents for embedded rounding APIs.
    
    * resolve conflicts with #97569
    
    * formatting
    
    * bug fix and remove un-needed SAE related intrinsics
    
    * resolve comments:
    1. update the arg lists for genHWIntrinsic_R_RM
    
    * resolve comments:
    Add jumptable fallback to non-table driven embedded rounding intrinsics.
    
    * resolve comments:
    1. remove some redundent checks on embedded rounding intrinsics
    
    * Bug fix:
    pass the correct operand GenTree node, when emitting the fallback for embedded rounding intrinsics.
    
    * formatting
    
    * revert an unexpected change.
    
    * 1.Resolve comments:
    2. Added FMA intrinsics with embedded rounding and unit tests.
    
    * Expose the rest of embedded rounding APIs
    
    * formatting
    
    * Ensure the control byte local is assigned to the correct register.

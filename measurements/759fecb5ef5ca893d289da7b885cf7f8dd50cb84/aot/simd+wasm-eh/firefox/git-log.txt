commit 759fecb5ef5ca893d289da7b885cf7f8dd50cb84
Author: Michal Strehovsk√Ω <MichalStrehovsky@users.noreply.github.com>
Date:   Tue Jan 31 08:53:42 2023 +0900

    Inline resource strings in the compiler (#80896)
    
    On a high level:
    * When we're looking at IL to do substitutions, we additionally look for calls to `SR.SomeResourceName`. These are generated properties (generated by a piece of code in Arcade) that basically just do `GetResourceString(nameof(SomeResourceName))`. We look up what the resource string is (in the manifest resource) and replace the call with the looked up string literal.
    * We also keep track of calls to `SR.GetResourceString`. Seeing this in the graph means that the optimization was defeated - someone bypassed the generated accessors. If we see one, we add dependency graph node to the graph that represent the manifest resource that has the string.
    * When generating managed resources we skip over the one that has the strings unless the above dependency node is in the graph. This allows optimizing away the resource blobs if all accesses were inlined.
